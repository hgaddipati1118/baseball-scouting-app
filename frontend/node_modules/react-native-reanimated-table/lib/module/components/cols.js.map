{"version":3,"names":["React","View","StyleSheet","Cell","sum","Col","_ref","data","style","width","heightArr","flex","textStyle","props","createElement","flatten","undefined","map","item","i","height","_extends","key","Cols","_ref2","widthArr","flexArr","styles","cols","wth","create","flexDirection"],"sources":["cols.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport { View, StyleSheet, ViewStyle, TextStyle, StyleProp } from 'react-native';\nimport { Cell } from './cell';\nimport { sum } from '../utils';\n\ninterface ColProps {\n  data: any[];\n  style?: StyleProp<ViewStyle>;\n  width?: number;\n  heightArr?: number[];\n  flex?: number;\n  textStyle?: StyleProp<TextStyle>;\n}\n\nexport const Col: FC<ColProps> = ({ data, style, width, heightArr, flex, textStyle, ...props }) => {\n  return data ? (\n    <View style={StyleSheet.flatten([{ width: width ?? (flex ? undefined : 1), flex }, style])}>\n      {data.map((item, i) => {\n        const height = heightArr?.[i];\n        return (\n          <Cell key={i} data={item} width={width} height={height} textStyle={textStyle} {...props} />\n        );\n      })}\n    </View>\n  ) : null;\n};\n\ninterface ColsProps {\n  data: any[][];\n  style?: StyleProp<ViewStyle>;\n  widthArr?: number[];\n  heightArr?: number[];\n  flexArr?: number[];\n  textStyle?: StyleProp<TextStyle>;\n}\n\nexport const Cols: FC<ColsProps> = ({ data, style, widthArr, heightArr, flexArr, textStyle, ...props }) => {\n  const width = widthArr ? sum(widthArr) : 0;\n\n  return data ? (\n    <View style={StyleSheet.flatten([styles.cols, width ? { width } : {}])}>\n      {data.map((item, i) => {\n        const flex = flexArr?.[i];\n        const wth = widthArr?.[i];\n        return (\n          <Col\n            key={i}\n            data={item}\n            width={wth}\n            heightArr={heightArr}\n            flex={flex}\n            style={style}\n            textStyle={textStyle}\n            {...props}\n          />\n        );\n      })}\n    </View>\n  ) : null;\n};\n\nconst styles = StyleSheet.create({\n  cols: { flexDirection: 'row' },\n});\n"],"mappings":";AAAA,OAAOA,KAAK,MAAc,OAAO;AACjC,SAASC,IAAI,EAAEC,UAAU,QAAyC,cAAc;AAChF,SAASC,IAAI,QAAQ,QAAQ;AAC7B,SAASC,GAAG,QAAQ,UAAU;AAW9B,OAAO,MAAMC,GAAiB,GAAGC,IAAA,IAAkE;EAAA,IAAjE;IAAEC,IAAI;IAAEC,KAAK;IAAEC,KAAK;IAAEC,SAAS;IAAEC,IAAI;IAAEC,SAAS;IAAE,GAAGC;EAAM,CAAC,GAAAP,IAAA;EAC5F,OAAOC,IAAI,gBACTP,KAAA,CAAAc,aAAA,CAACb,IAAI;IAACO,KAAK,EAAEN,UAAU,CAACa,OAAO,CAAC,CAAC;MAAEN,KAAK,EAAEA,KAAK,KAAKE,IAAI,GAAGK,SAAS,GAAG,CAAC,CAAC;MAAEL;IAAK,CAAC,EAAEH,KAAK,CAAC;EAAE,GACxFD,IAAI,CAACU,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,KAAK;IACrB,MAAMC,MAAM,GAAGV,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAGS,CAAC,CAAC;IAC7B,oBACEnB,KAAA,CAAAc,aAAA,CAACX,IAAI,EAAAkB,QAAA;MAACC,GAAG,EAAEH,CAAE;MAACZ,IAAI,EAAEW,IAAK;MAACT,KAAK,EAAEA,KAAM;MAACW,MAAM,EAAEA,MAAO;MAACR,SAAS,EAAEA;IAAU,GAAKC,KAAK,EAAI;EAE/F,CAAC,CAAC,CACG,GACL,IAAI;AACV,CAAC;AAWD,OAAO,MAAMU,IAAmB,GAAGC,KAAA,IAAwE;EAAA,IAAvE;IAAEjB,IAAI;IAAEC,KAAK;IAAEiB,QAAQ;IAAEf,SAAS;IAAEgB,OAAO;IAAEd,SAAS;IAAE,GAAGC;EAAM,CAAC,GAAAW,KAAA;EACpG,MAAMf,KAAK,GAAGgB,QAAQ,GAAGrB,GAAG,CAACqB,QAAQ,CAAC,GAAG,CAAC;EAE1C,OAAOlB,IAAI,gBACTP,KAAA,CAAAc,aAAA,CAACb,IAAI;IAACO,KAAK,EAAEN,UAAU,CAACa,OAAO,CAAC,CAACY,MAAM,CAACC,IAAI,EAAEnB,KAAK,GAAG;MAAEA;IAAM,CAAC,GAAG,CAAC,CAAC,CAAC;EAAE,GACpEF,IAAI,CAACU,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,KAAK;IACrB,MAAMR,IAAI,GAAGe,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAGP,CAAC,CAAC;IACzB,MAAMU,GAAG,GAAGJ,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAGN,CAAC,CAAC;IACzB,oBACEnB,KAAA,CAAAc,aAAA,CAACT,GAAG,EAAAgB,QAAA;MACFC,GAAG,EAAEH,CAAE;MACPZ,IAAI,EAAEW,IAAK;MACXT,KAAK,EAAEoB,GAAI;MACXnB,SAAS,EAAEA,SAAU;MACrBC,IAAI,EAAEA,IAAK;MACXH,KAAK,EAAEA,KAAM;MACbI,SAAS,EAAEA;IAAU,GACjBC,KAAK,EACT;EAEN,CAAC,CAAC,CACG,GACL,IAAI;AACV,CAAC;AAED,MAAMc,MAAM,GAAGzB,UAAU,CAAC4B,MAAM,CAAC;EAC/BF,IAAI,EAAE;IAAEG,aAAa,EAAE;EAAM;AAC/B,CAAC,CAAC"}